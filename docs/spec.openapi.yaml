openapi: 3.0.3

info:
  title: Proxy Python
  license:
    name: MIT
    url: https://github.com/hawks-atlanta/proxy-python/blob/main/LICENSE
  version: 1.0.0

tags:
  - name: Authentication
  - name: Account
  - name: Files

paths:
  /auth/login:
    post:
      tags:
        - Authentication
      description: Authenticates to the server
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/credentials"
      responses:
        "201":
          description: Login succeeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/authorization"
        "401":
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"

  /auth/refresh:
    post:
      tags:
        - Authentication
      security:
        - bearer: []
      description: Verifies the received token is still valid
      responses:
        "200":
          description: The current token is valid, and a new token was obtained successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Token refreshed successfully"
                  token:
                    type: string
                    example: "{new_jwt}"
        "400":
          description: JSON body wasn't given or was not valid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
        "401":
          description: No authorization header was given or the token is invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"

  /account/register:
    post:
      tags:
        - Account
      description: Register a new user in the service
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/credentials"
      responses:
        "201":
          description: Registration successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/authorization"
        "409":
          description: Username is already registered
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"

  /file/upload:
    post:
      tags:
        - Files
      security:
        - bearer: []
      description: Upload a file
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                fileName:
                  type: string
                  example: "picture"
                location:
                  type: string
                  example: "5295d524-aafc-407c-96ed-adae2cd5047a"
      responses:
        "201":
          description: File upload successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  fileUUID:
                    type: string
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"

  /file/download/{fileUUID}:
    get:
      tags:
        - Files
      security:
        - bearer: []
      description: Download a file by UUID
      parameters:
        - in: path
          name: fileUUID
          required: true
          schema:
            type: string
          description: The UUID of the file to download
      responses:
        "200":
          description: File downloaded successfully
          content:
            application/file:
              schema:
                type: string
                format: binary
        "401":
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
        "404":
          description: File not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"

  /file/check/{fileUUID}:
    get:
      tags:
        - Files
      security:
        - bearer: []
      description: Check if the given file is ready
      parameters:
        - in: path
          name: fileUUID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The state of the file was retreived successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/statusResponse"
                type: object
                properties:
                  ready:
                    type: boolean
                    example: true
        "401":
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"

  /file/{fileUUID}/move:
    patch:
      tags:
        - Files
      security:
        - bearer: []
      description: Move an existing file to a different location
      parameters:
        - in: path
          name: fileUUID
          required: true
          schema:
            type: string
          description: The ID of the file to move
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                targetDirectoryUUID:
                  type: string
                  example: "fbef8fdb-d16e-436b-8835-b96091b0b9ce"
      responses:
        "200":
          description: File moved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
        "401":
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"

  /file/{fileUUID}/rename:
    patch:
      tags:
        - Files
      security:
        - bearer: []
      description: Rename an existing file
      parameters:
        - in: path
          name: fileUUID
          required: true
          schema:
            type: string
          description: The ID of the file to rename
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                newName:
                  type: string
                  example: "new_file_name"
      responses:
        "200":
          description: File renamed successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
        "401":
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"

  /file/{fileUUID}:
    get: 
      tags: 
        - Files
      security:
        - bearer: []
      description: Get a file by its UUID
      parameters:
        - in: path
          name: fileUUID
          required: true
          schema:
            type: string
          description: The ID of the file to get
      responses: 
        "200": 
          description: File successfully obtained
          content: 
            aplication/json: 
              schema: 
               type: object
               properties:
                file: 
                  type: object
                  allOf:
                    - $ref: "#/components/schemas/fileDetails"
                msg: 
                  type: string
                  example: "The file have been obtained successfully"
    delete:
      tags:
        - Files
      security:
        - bearer: []
      description: Deletes an existing file by fileUUID
      parameters:
        - in: path
          name: fileUUID
          required: true
          schema:
            type: string
          description: The ID of the file to delete
      responses:
        "200":
          description: File successfully deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
        "401":
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"

  /file/list:
    get:
      tags:
        - Files
      security:
        - bearer: []
      description: List files in a given location
      parameters:
        - in: query
          name: location
          required: false
          schema:
            type: string
          description: The location (UUID) to list files from
      responses:
        "200":
          description: List of files in the location
          content:
            application/json:
              schema:
                type: object
                properties:
                  files: 
                    type: array
                    items:
                      $ref: "#/components/schemas/fileDetails"
                  msg:
                    type: string
                    example: "Files have been listed successfully"
        "401":
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"

  /file/shared:
    get:
      tags:
        - Files
      security:
        - bearer: []
      description: Gets the list of shared files
      responses:
        "200":
          description: List of shared files obtained
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/fileDetailsShared"
        "401":
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"

  /file/share:
    post:
      tags:
        - Files
      security:
        - bearer: []
      description: Share a file with a user
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/shareWithReq"
      responses:
        "200":
          description: File shared successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
        "401":
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
        "404":
          description: File not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"

  /file/shared-with-who:
    get:
      tags:
        - Files
      security:
        - bearer: []
      description: Get the list of users the file is shared with
      parameters:
        - in: query
          name: fileUUID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List of users the file is shared with
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      type: string
                      example: sulcud
        "401":
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
        "404":
          description: File not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"

  /file/unshare:
    post:
      tags:
        - Files
      security:
        - bearer: []
      description: Unshare a file with a user
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/shareWithReq"
      responses:
        "200":
          description: File unshared successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
        "401":
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
        "404":
          description: File not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"

  /account/password:
    patch:
      tags:
        - Account
      security:
        - bearer: []
      description: Updates the password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                oldPassword:
                  type: string
                newPassword:
                  type: string
      responses:
        "200":
          description: Password updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"

  /folders:
    post:
      tags:
        - Files
      security:
        - bearer: []
      description: Create a new folder
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                folderName:
                  type: string
                location:
                  type: string #UUID
      responses:
        "201":
          description: Folder created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
        "401":
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"

components:
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    statusResponse:
      type: object
      properties:
        msg:
          type: string
    credentials:
      type: object
      properties:
        username:
          type: string
          example: sulcud
        password:
          type: string
          example: password
    authorization:
      type: object
      properties:
        token:
          type: string
          example: "{jwt}"
    fileDetails:
      type: object
      properties:
        name:
          type: string
          example: "pixture.png"
        extension: 
          type: string
          example: "image/png"
        size:
          type: integer
          example: 4687
        isFile:
          type: boolean
        uuid:
          type: string
          example: "5295d524-aafc-407c-96ed-adae2cd5047a"
    fileDetailsShared:
      type: object
      properties:
        name:
          type: string
          example: "pixture.png"
        size:
          type: integer
          example: 4687
        isFile:
          type: boolean
        uuid:
          type: string
          example: "5295d524-aafc-407c-96ed-adae2cd5047a"
        ownerusername:
          type: string
          example: "CocoTheCat"
    shareWithReq:
      type: object
      properties:
        fileUUID:
          type: string
        otherUsername:
          type: string
