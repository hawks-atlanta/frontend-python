openapi: 3.0.3

info:
  title: Proxy Python
  license:
    name: MIT
    url: https://github.com/hawks-atlanta/proxy-python/blob/main/LICENSE
  version: 1.0.0

tags:
  - name: Authentication
  - name: Account
  - name: Authorization
  - name: Files

paths:
  /auth/login:
    post:
      tags:
        - Authentication
      security:
        - bearer: []
      description: Authenticates to the server
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/credentials"
      responses:
        "201":
          description: Login succeeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/authorization"
        "401":
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
  
  /auth/refresh:
    post:
      tags:
        - Authorization
      security:
        - bearer: []
      description: Verifies the received token is still valid
      responses:
        "200":
          description: The current token is valid, and a new token was obtained successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Token refreshed successfully"
                  token:
                    type: string
                    example: "{new_jwt}"
        "400":
          description: JSON body wasn't given or was not valid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
        "401":
          description: No authorization header was given or the token is invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"

  /account/register:
    post:
      tags:
        - Authentication
      security:
        - bearer: []
      description: Register a new user in the service
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/credentials"
      responses:
        "201":
          description: Registration successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/authorization"
        "409":
          description: Username is already registered
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"

  /file/upload:
    post:
      tags:
        - File
      description: Upload a file
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                token:
                  type: string
                location:
                  type: string
                  description: "1"
                  readOnly: true
      responses:
        "201":
          description: File upload successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  fileUUID:
                    type: string
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"

  /files/download/{fileUUID}:
    get:
      tags:
        - Files
      description: Download a file by UUID
      parameters:
        - in: path
          name: fileUUID
          required: true
          schema:
            type: string
          description: The UUID of the file to download
      responses:
        "200":
          description: File downloaded successfully
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        "401":
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
        "404":
          description: File not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"

  /files:
    post:
      tags:
        - Files
      description: Create a new file
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                fileName:
                  type: string
                location:
                  type: string
                file:
                  type: string
      responses:
        "201":
          description: File created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
        "401":
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"

  /files/{fileId}/move:
    patch:
      tags:
        - Files
      description: Move an existing file to a different location
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
          description: The ID of the file to move
        - in: query
          name: newLocation
          required: true
          schema:
            type: string
          description: The new location to move the file to
      responses:
        "200":
          description: File moved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
        "401":
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"

  /files/{fileId}:
    delete:
      tags:
        - Files
      description: Deletes an existing file by fileId
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
          description: The ID of the file to delete
      responses:
        "200":
          description: File successfully deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
        "401":
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"

  /files/list:
    get:
      tags:
        - Files
      description: List files in a given location
      parameters:
        - in: query
          name: location
          required: false
          schema:
            type: string
          description: The location (UUID) to list files from
      responses:
        "200":
          description: List of files in the location
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/fileDetails"
        "401":
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"

  /files/shared:
    get:
      tags:
        - Files
      description: Gets the list of shared files
      responses:
        "200":
          description: List of shared files obtained
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/fileDetailsShared"
        "401":
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"

  /files/share:
    post:
      tags:
        - Files
      description: Share a file with a user
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/shareWithReq"
      responses:
        "200":
          description: File shared successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
        "401":
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
        "404":
          description: File not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"

  /files/sharedwithwho:
    get:
      tags:
        - Files
      description: Get the list of users the file is shared with
      parameters:
        - in: query
          name: fileUUID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List of users the file is shared with
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      type: string
                      example: sulcud
        "401":
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
        "404":
          description: File not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"

  /files/unshare:
    post:
      tags:
        - Files
      description: Unshare a file with a user
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/shareWithReq"
      responses:
        "200":
          description: File unshared successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
        "401":
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
        "404":
          description: File not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
              
  /account/password:
    patch:
      tags:
        - Account
      security:
        - bearer: []
      description: Updates the username password
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - type: object
                  properties:
                    currentPassword:
                      type: string
                    newPassword:
                      type: string
      responses:
        "200":
          description: Password updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"

  /folders:
    post:
      tags:
        - Files
      description: Create a new folder
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                folderName:
                  type: string
                location:
                  type: string #UUID
      responses:
        "201":
          description: Folder created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
        "401":
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"

components:
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    statusResponse:
      type: object
      properties:
        msg:
          type: string
    credentials:
      type: object
      properties:
        username:
          type: string
          example: sulcud
        password:
          type: string
          example: password
    authorization:
      type: object
      properties:
        token:
          type: string
    fileDetails:
      type: object
      properties:
        fileName:
          type: string
        fileSize:
          type: integer
        isFile:
          type: boolean
        fileUUID:
          type: string
    fileDetailsShared:
      type: object
      properties:
        fileName:
          type: string
        fileSize:
          type: integer
        isFile:
          type: boolean
        fileUUID:
          type: string
        ownerusername:
          type: string
    shareWithReq:
      type: object
      properties:
        fileUUID:
          type: string
        otherUsername:
          type: string